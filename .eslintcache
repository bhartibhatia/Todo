[{"G:\\All React Projects\\react\\react-todo-app\\todo-app\\src\\index.js":"1","G:\\All React Projects\\react\\react-todo-app\\todo-app\\src\\App.js":"2","G:\\All React Projects\\react\\react-todo-app\\todo-app\\src\\reportWebVitals.js":"3","G:\\All React Projects\\react\\react-todo-app\\todo-app\\src\\todo.js":"4","G:\\All React Projects\\react\\react-todo-app\\todo-app\\src\\Todo.js":"5","G:\\All React Projects\\react\\react-todo-app\\todo-app\\src\\Firebase.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":2352,"mtime":1606735995792,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":500,"mtime":1606646595187,"results":"11","hashOfConfig":"8"},{"size":2304,"mtime":1606735134777,"results":"12","hashOfConfig":"8"},{"size":154,"mtime":1606738069441,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"f119sg",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"G:\\All React Projects\\react\\react-todo-app\\todo-app\\src\\index.js",[],["29","30"],"G:\\All React Projects\\react\\react-todo-app\\todo-app\\src\\App.js",[],"G:\\All React Projects\\react\\react-todo-app\\todo-app\\src\\reportWebVitals.js",[],"G:\\All React Projects\\react\\react-todo-app\\todo-app\\src\\todo.js",[],"G:\\All React Projects\\react\\react-todo-app\\todo-app\\src\\Todo.js",["31"],"import React , {useState} from 'react'\r\nimport {List,ListItem, ListItemText,ListItemAvatar, Modal,Button} from '@material-ui/core';\r\nimport DeleteSweepIcon from '@material-ui/icons/DeleteSweep';\r\nimport db from './Firebase'\r\nimport {makeStyles} from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles((theme) =>(\r\n    {\r\n        paper:{\r\n            position: 'absoulte',\r\n            width:400,\r\n            backgroundColor: theme.palette.background.paper,\r\n            border:'2px solid #000',\r\n            boxShadow: theme.shadows[5],\r\n            padding: theme.spacing(2,4,3),\r\n        },\r\n    }));\r\n\r\nfunction Todo(props) {\r\n    const classes=useStyles();\r\n    const [open, setOpen]=useState(false);\r\n    const [input,setInput]=useState('');\r\n\r\n    console.log('myprops',props)\r\n    const HandelOpen=() =>{\r\n    setOpen(true);\r\n    }\r\n    const HandelClose=() =>{\r\n        setOpen(false);\r\n    }\r\nconst handelUpdate = () =>\r\n{\r\n    // Update the todo with the new input text\r\n    db.collection('todos').doc(props.text.id).set(\r\n    {\r\n        task1:input\r\n    },{ merge:true}\r\n    );\r\n    setOpen(false);\r\n}\r\n    return (\r\n        <>\r\n        <Modal\r\n        open={open}\r\n        onClose={HandelClose}\r\n\r\n        >\r\n            <div className={classes.paper}>\r\n                <h1>I am the Modal</h1>\r\n                <input placeholder={props.text.task1} value={input} onChange={event => {\r\n            console.log(event.target.value);\r\n            setInput(event.target.value)\r\n          }}></input>\r\n            <Button onClick = {handelUpdate}>Update Todo</Button>\r\n            </div>\r\n        </Modal>\r\n        <List>\r\n            <ListItem>\r\n                <ListItemAvatar>\r\n                   \r\n                </ListItemAvatar>\r\n             <ListItemText primary={props.text.task1} secondary='Dummy Data'/>\r\n             \r\n            </ListItem>\r\n            \r\n            <Button onClick={() =>{\r\n                setOpen(true)\r\n            }}>Edit</Button>\r\n            <DeleteSweepIcon onClick={\r\n                () =>{\r\ndb.collection('todos').doc(props.text.id).delete()\r\n                }\r\n            }/> \r\n            \r\n        </List>\r\n        {/* // <div>\r\n        //     <li>{props.text}</li>\r\n        // </div> */}\r\n        </>\r\n    )\r\n    \r\n}\r\n\r\nexport default Todo;\r\n",["32","33"],"G:\\All React Projects\\react\\react-todo-app\\todo-app\\src\\Firebase.js",["34"],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":25,"column":11,"nodeType":"41","messageId":"42","endLine":25,"endColumn":21},{"ruleId":"35","replacedBy":"43"},{"ruleId":"37","replacedBy":"44"},{"ruleId":"45","severity":2,"message":"46","line":4,"column":43,"nodeType":"41","messageId":"47","endLine":4,"endColumn":57},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"no-unused-vars","'HandelOpen' is assigned a value but never used.","Identifier","unusedVar",["48"],["49"],"no-undef","'firebaseConfig' is not defined.","undef","no-global-assign","no-unsafe-negation"]